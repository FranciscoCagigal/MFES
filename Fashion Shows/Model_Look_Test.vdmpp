class Model_Look_Test is subclass of MyTestCase
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
-- TODO Define operations here

			private TestModelLook :() ==> ()
			TestModelLook() ==
			(
				-- constructor
				dcl model : Model := new Model("Pedro Faria",67,<Masculino>,1.78,74.32);
				dcl show : Fashion_Show := new Fashion_Show("Porto","Primavera",2017, 12, 31, 23, 59);		
				dcl model_look : Model_Look := new Model_Look(model,show, mk_Fashion_Show`Date(2017, 12, 31, 23, 00),"vestido azul e cor de rosa");
				
				-- gets
				assertEqual(model_look.getModel(),model);
				assertEqual(model_look.getFashionShow(),show);
				assertEqual(model_look.getDate(),mk_Fashion_Show`Date(2017, 12, 31, 23, 00));
				assertEqual(model_look.getDescription(),"vestido azul e cor de rosa");
				
				
				return;
			);
			
			public static main_test: () ==> ()
			main_test() ==
			(
				IO`print("TestModelLook -> ");
				new Model_Look_Test().TestModelLook();
				IO`println("Passed");
			);

functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Model_Look_Test
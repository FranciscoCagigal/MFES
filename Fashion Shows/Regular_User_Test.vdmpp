class Regular_User_Test is subclass of MyTestCase
types
-- TODO Define types here
values
-- TODO Define values here
instance variables
-- TODO Define instance variables here
operations
-- TODO Define operations here

			private TestUser :() ==> ()
			TestUser() ==
			(
				-- constructor
				dcl user : Regular_User := new Regular_User("Diolinda", <Feminino>, "diolinda@gmail.com", "password_diolinda", true,false);
				dcl user2 : Regular_User := new Regular_User("Diofeia", <Feminino>, "diofeia@gmail.com", "password_diofeia", false,true);
				dcl model : Model := new Model("Pedro Faria",67,<Masculino>,1.78,74.32);
				dcl show : Fashion_Show := new Fashion_Show("Porto","Primavera",2017, 12, 31, 23, 59);		
				dcl model_look : Model_Look := new Model_Look(model,show, mk_Fashion_Show`Date(2017, 12, 31, 23, 00),"vestido azul e cor de rosa");
				
				-- gets
				assertEqual(user.getName(),"Diolinda");
				assertEqual(user2.getName(),"Diofeia");
				assertEqual(user.getPremium(),true);
				assertEqual(user2.getPremium(),false);
				assertEqual(user.getGender(),<Feminino>);
				assertEqual(user2.getGender(),<Feminino>);
				assertEqual(user.getEmail(),"diolinda@gmail.com");
				assertEqual(user2.getEmail(),"diofeia@gmail.com");
				assertEqual(user.getPassword(),"password_diolinda");
				assertEqual(user2.getPassword(),"password_diofeia");
				assertEqual(user.isAdmin(),false);
				assertEqual(user2.isAdmin(),true);
				
				-- looks
				assertEqual(user.getFavoriteLooks(),{});
				user.addLookToFavoriteLooks(model_look);
				assertEqual(user.getFavoriteLooks(),{model_look});
				user.removeLookFromFavoriteLooks(model_look);
				assertEqual(user.getFavoriteLooks(),{});
				
				return;
			);
			
			public static main_test: () ==> ()
			main_test() ==
			(
				IO`print("TestUser -> ");
				new Regular_User_Test().TestUser();
				IO`println("Passed");
			);
			
functions
-- TODO Define functiones here
traces
-- TODO Define Combinatorial Test Traces here
end Regular_User_Test